[{"C:\\Users\\Kumar Shubham\\online-dairy-managment-project-main\\src\\index.js":"1","C:\\Users\\Kumar Shubham\\online-dairy-managment-project-main\\src\\App.js":"2","C:\\Users\\Kumar Shubham\\online-dairy-managment-project-main\\src\\reportWebVitals.js":"3","C:\\Users\\Kumar Shubham\\online-dairy-managment-project-main\\src\\redux\\store.js":"4","C:\\Users\\Kumar Shubham\\online-dairy-managment-project-main\\src\\redux\\DealerSlice.js":"5","C:\\Users\\Kumar Shubham\\online-dairy-managment-project-main\\src\\components\\controller\\DealerData.js":"6","C:\\Users\\Kumar Shubham\\online-dairy-managment-project-main\\src\\components\\models\\Dealer.js":"7","C:\\Users\\Kumar Shubham\\online-dairy-managment-project-main\\src\\components\\services\\DealerServices.js":"8","C:\\Users\\Kumar Shubham\\online-dairy-managment-project-main\\src\\components\\controller\\DealerController\\AddDealer.js":"9","C:\\Users\\Kumar Shubham\\online-dairy-managment-project-main\\src\\components\\controller\\DealerController\\GetAllDealer.js":"10"},{"size":377,"mtime":1639648816000,"results":"11","hashOfConfig":"12"},{"size":247,"mtime":1639743183896,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1639648816000,"results":"14","hashOfConfig":"12"},{"size":284,"mtime":1639648816000,"results":"15","hashOfConfig":"12"},{"size":1061,"mtime":1639744357426,"results":"16","hashOfConfig":"12"},{"size":11499,"mtime":1639648816000,"results":"17","hashOfConfig":"12"},{"size":132,"mtime":1639648816000,"results":"18","hashOfConfig":"12"},{"size":1963,"mtime":1639648816000,"results":"19","hashOfConfig":"12"},{"size":4072,"mtime":1639742970558,"results":"20","hashOfConfig":"12"},{"size":2965,"mtime":1639735390809,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"hywevt",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":1,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"25"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Kumar Shubham\\online-dairy-managment-project-main\\src\\index.js",["47"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n// step 2 for redux \nReactDOM.render(\n    <Provider store={store} >\n        <App />\n    </Provider>\n    ,\n    document.getElementById('root')\n);",["48","49"],"C:\\Users\\Kumar Shubham\\online-dairy-managment-project-main\\src\\App.js",[],"C:\\Users\\Kumar Shubham\\online-dairy-managment-project-main\\src\\reportWebVitals.js",[],"C:\\Users\\Kumar Shubham\\online-dairy-managment-project-main\\src\\redux\\store.js",[],"C:\\Users\\Kumar Shubham\\online-dairy-managment-project-main\\src\\redux\\DealerSlice.js",[],"C:\\Users\\Kumar Shubham\\online-dairy-managment-project-main\\src\\components\\controller\\DealerData.js",["50","51","52","53","54","55"],"// import { getFarmerByIdService } from \"../services/FarmService\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { deleteDealerService,updateDealerService,insertDealerService,getDealerService,getAllDealersService } from \"../services/DealerServices\";\nimport axios from \"axios\";\n\nimport {getDealer,getAllDealers} from \"../../redux/DealerSlice\";\nimport Dealer from \"../models/Dealer\";\n\nconst DealerData = () => {\n\n\n    const [newDealerObj, setNewDealerObj] = useState(new Dealer());\n    const [updtDealerObj, setUpdtDealerObj] = useState(new Dealer());\n    const [displayDealerObj, setDisplayDealerObj] = useState(new Dealer());\n    const [updateDealerObj, setUpdateDealerObj] = useState(new Dealer());\n    const [dealerId, setdealerId] = useState('');\n    const [deleteDealer, setDeleteDealer] = useState('');\n    const dispatch = useDispatch();\n    const dealerDataFromStore = useSelector((state) => state.dealer.dealerState);\n    const dealerList = useSelector((state) => state.dealer.dealerList);\n    const dealerDelete = useSelector((state) => state.dealer.dealerDelete);\n\n    const handleDealer = (d) => {\n        console.log('handleDealer');\n        setdealerId(d.target.value);\n    }\n\n    const handleAddDealer = (d) => {\n        console.log(d.target.value);\n        setNewDealerObj({\n            ...newDealerObj,\n            [d.target.name]: d.target.value,\n        });\n    }\n    const handleUpdateDealer = (d) => {\n        console.log(d.target.value);\n        setUpdtDealerObj({\n            ...updtDealerObj,\n            [d.target.name]: d.target.value,\n        });\n    }\n    const handleDeleteDealer = (ev) => {\n        console.log('handleDeleteDealer');\n        setDeleteDealer(ev.target.value);\n    }\n\n    const submitGetDealer = (evt) => {\n        evt.preventDefault();\n        console.log('submitGetDealerservice');\n        getDealerService(dealerId)\n            .then((response) => { dispatch(getDealerService(response.data)) })\n            .catch(() => {\n                alert(`Dealer with ${dealerId} not found.`);\n            });\n        console.log(Object.keys(dealerList));\n        setdealerId('');\n    }\n\n    const submitGetAllDealer = (evt) => {\n        evt.preventDefault();\n        console.log('submitGetAllDealer');\n        getAllDealersService()\n            .then((response) => {\n                dispatch(getAllDealersService(response.data));\n            })\n            .catch(() => {\n                alert(`Something is wrong!`);\n            });\n    }\n\n    const submitinsertDealer = (evt) => {\n        evt.preventDefault();\n        console.log('addDealer');\n        axios.post(`http://localhost:8082/Dealer/add`, newDealerObj)\n            .then((response) => {\n                setDisplayDealerObj(response.data);\n                alert('dealer added successfully.');\n                setNewDealerObj({ firstName:'', lastName:'',mobileNumber:'',email:'',password:''})\n            \n            })\n            .catch(() => {\n                alert(\"Dealer could not be added.\");\n            });\n    }\n\n    const submitUpdateDealer = (evt) => {\n        evt.preventDefault();\n        console.log('addDealer');\n        axios.put(`http://localhost:8082/Dealer/update`, updtDealerObj)\n            .then((response) => {\n                setUpdateDealerObj(response.data);\n                alert('Dealer details updated successfully.');\n                setNewDealerObj({ firstName:'', lastName:'',mobileNumber:'',email:'',password:''})\n            \n            })\n            .catch(() => {\n                alert(\"Dealer could not be found.\");\n            });\n    }\n\n    const submitDeleteDealer = (evt) => {\n        evt.preventDefault();\n        console.log('deleteDealerDetails');\n        axios.delete(`http://localhost:8082/farmer/delete/${deleteDealer}`)\n            .then((response) => {\n                alert(`Dealer details deleted successfully.`)\n                dispatch(deleteDealer(response.data));             // Sending data to redux store\n\n            })\n            .catch(() => {\n                alert(`Dealer not found.`);\n            });\n\n    }\n\n    return (\n        <div>\n            <h1 className=\"display-4 text-primary mt-3 mb-3\" >Dealer Component</h1>\n\n            <div className=\"col-4 border border-light shadow p-3 mb-5 bg-white\">\n                <p>Find Dealer by id</p>\n                <form className=\"form form-group form-primary\" onSubmit={submitGetDealer}>\n                    <input className=\"form-control mt-3\" type=\"number\" id=\"dealerId\" name=\"dealerId\" value={dealerId} onChange={handleDealer} placeholder=\"Enter dealer id to search\" autoFocus required />\n                    <input className=\"form-control mt-3 btn btn-primary\" type=\"submit\" value=\"Search dealer\" />\n                </form>\n                <p>Dealer details: {dealerDataFromStore.dealerId} {dealerDataFromStore.firstName} {dealerDataFromStore.lastName} </p>\n            </div>\n\n            <div>\n                <div className=\"col-6 border border-light shadow p-3 mb-5 bg-white\">\n                    <p>List of all Dealers</p>\n                    <div>\n                        <form className=\"form form-group form-primary\">\n                            <input className=\"mt-3 btn btn-primary btn-block\" type=\"button\" onClick={submitGetAllDealer} value=\"Find All Dealers\" />\n                        </form>\n                    </div >\n                    <table className=\"table table-light table-striped \">\n                        <thead>\n                            <tr>\n                                <th>Dealerid</th>\n                                <th>Name</th>\n                                <th>lastname</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {dealerList.map((dealer, k) => {\n                                return (\n                                    <tr k={k}> <td>{dealer.farmerId}</td> <td>{dealer.firstName}</td><td>{dealer.lastName}</td></tr>\n                                )\n                            })}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n            <div className=\"col-4 border border-light shadow p-3 mb-5 bg-white\">\n            \n                <p>Add New Dealer</p>\n                {/* <form onSubmit={submitAddEmp}> */}\n                <div id=\"addNewDealerDiv\">\n                    <input\n                        type=\"text\"\n                        id=\"firstName\"\n                        name=\"firstName\"\n                        value={newDealerObj.firstName}\n                        onChange={handleAddDealer}\n                        placeholder=\"Enter First Name\" />\n                    <input\n                        type=\"text\"\n                        id=\"lastName\"\n                        name=\"lastName\"\n                        value={newDealerObj.lastName}\n                        onChange={handleAddDealer}\n                        placeholder=\"Enter Last Name\" />\n                    <input\n                        type=\"text\"\n                        id=\"mobileNumber\"\n                        name=\"mobileNumber\"\n                        value={newDealerObj.mobileNumber}\n                        onChange={handleAddDealer}\n                        placeholder=\"Enter Mobile Number\" />\n                     <input\n                        type=\"text\"\n                        id=\"email\"\n                        name=\"email\"\n                        value={newDealerObj.email}\n                        onChange={handleAddDealer}\n                        placeholder=\"Enter Email\" />   \n                     <input\n                        type=\"text\"\n                        id=\"password\"\n                        name=\"password\"\n                        value={newDealerObj.password}\n                        onChange={handleAddDealer}\n                        placeholder=\"Enter password\" />   \n                    <input\n                        type=\"submit\"\n                        // type=\"button\"\n                        value=\"Add Dealer\"\n                        onClick={submitinsertDealer}\n                    />\n                </div>\n                <p>New Dealer Data: {displayDealerObj.DealerId} {displayDealerObj.firstName} {displayDealerObj.lastName}{displayDealerObj.mobileNumber}{displayDealerObj.email}</p>\n            </div>\n            <div className=\"col-4 border border-light shadow p-3 mb-5 bg-white\">\n            \n            <p>Update New Dealer</p>\n            {/* <form onSubmit={submitAddEmp}> */}\n            <div id=\"addNewDealerDiv\">\n            <input\n                    type=\"text\"\n                    id=\"dealerId\"\n                    name=\"dealerId\"\n                    value={updtDealerObj.dealerId}\n                    onChange={handleUpdateDealer}\n                    placeholder=\"Enter Dealer Id\" />\n                <input\n                    type=\"text\"\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    value={updtDealerObj.firstName}\n                    onChange={handleUpdateDealer}\n                    placeholder=\"Enter First Name\" />\n                <input\n                    type=\"text\"\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    value={updtDealerObj.lastName}\n                    onChange={handleUpdateDealer}\n                    placeholder=\"Enter Last Name\" />\n                <input\n                    type=\"text\"\n                    id=\"mobileNumber\"\n                    name=\"mobileNumber\"\n                    value={updtDealerObj.mobileNumber}\n                    onChange={handleUpdateDealer}\n                    placeholder=\"Enter Mobile Number\" />\n                 <input\n                    type=\"text\"\n                    id=\"email\"\n                    name=\"email\"\n                    value={updtDealerObj.email}\n                    onChange={handleUpdateDealer}\n                    placeholder=\"Enter Email\" />   \n                 <input\n                    type=\"text\"\n                    id=\"password\"\n                    name=\"password\"\n                    value={updtDealerObj.password}\n                    onChange={handleUpdateDealer}\n                    placeholder=\"Enter password\" />   \n                <input\n                    type=\"submit\"\n                    // type=\"button\"\n                    value=\"update Dealer\"\n                    onClick={submitUpdateDealer}\n                />\n            </div>\n            <p>Updated Dealer Data: {updateDealerObj.DealerId} {updateDealerObj.firstName} {updateDealerObj.lastName} {updateDealerObj.mobileNumber} {updateDealerObj.email}</p>\n        </div>\n        <div className=\"col-4 border border-light shadow p-3 mb-5 bg-white\">\n                <p>Delete Dealer by id</p>\n                <form className=\"form form-group form-primary\" onSubmit={submitDeleteDealer}>\n                    <input className=\"form-control mt-3\" type=\"number\" id=\"deleteDealer\" name=\"deleteDealer\" value={deleteDealer} onChange={handleDeleteDealer} placeholder=\"Enter Dealer Id\" autoFocus required />\n                    <input className=\"form-control mt-3 btn btn-primary\" type=\"submit\" value=\"Delete Dealer\" />\n                </form>\n                {/* <p>Deleted Farmer details: {farmerDataFromStore.farmerId} {farmerDataFromStore.firstName} {farmerDataFromStore.lastName} </p> */}\n            </div>\n\n        </div>\n    );\n}\nexport default DealerData;",["56","57"],"C:\\Users\\Kumar Shubham\\online-dairy-managment-project-main\\src\\components\\models\\Dealer.js",[],"C:\\Users\\Kumar Shubham\\online-dairy-managment-project-main\\src\\components\\services\\DealerServices.js",[],"C:\\Users\\Kumar Shubham\\online-dairy-managment-project-main\\src\\components\\controller\\DealerController\\AddDealer.js",["58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78"],"// import { getFarmerByIdService } from \"../services/FarmService\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { deleteDealerService,updateDealerService,insertDealerService,getDealerService,getAllDealersService } from \"../services/DealerServices\";\r\nimport axios from \"axios\";\r\n\r\nimport {getDealer,getAllDealers} from \"../../redux/DealerSlice\";\r\nimport Dealer from \"../models/Dealer\";\r\nconst AddDealer = () => {\r\n\r\n\r\n    const [newDealerObj, setNewDealerObj] = useState(new Dealer());\r\n    const [updtDealerObj, setUpdtDealerObj] = useState(new Dealer());\r\n    const [displayDealerObj, setDisplayDealerObj] = useState(new Dealer());\r\n    const [updateDealerObj, setUpdateDealerObj] = useState(new Dealer());\r\n    const [dealerId, setdealerId] = useState('');\r\n    const [deleteDealer, setDeleteDealer] = useState('');\r\n    const dispatch = useDispatch();\r\n    const dealerDataFromStore = useSelector((state) => state.dealer.dealerState);\r\n    const dealerList = useSelector((state) => state.dealer.dealerList);\r\n    const dealerDelete = useSelector((state) => state.dealer.dealerDelete);\r\n    \r\n    const handleAddDealer = (d) => {\r\n        console.log(d.target.value);\r\n        setNewDealerObj({\r\n            ...newDealerObj,\r\n            [d.target.name]: d.target.value,\r\n        });\r\n    }\r\n    const submitinsertDealer = (evt) => {\r\n        evt.preventDefault();\r\n        console.log('addDealer');\r\n        axios.post(`http://localhost:8082/Dealer/add`, newDealerObj)\r\n            .then((response) => {\r\n                setDisplayDealerObj(response.data);\r\n                alert('dealer added successfully.');\r\n                setNewDealerObj({ firstName:'', lastName:'',mobileNumber:'',email:'',password:''})\r\n            \r\n            })\r\n            .catch(() => {\r\n                alert(\"Dealer could not be added.\");\r\n            });\r\n    }\r\n    return (\r\n        <div className=\"col-4 border border-light shadow p-3 mb-5 bg-white\">\r\n            \r\n        <p>Add New Dealer</p>\r\n        {/* <form onSubmit={submitAddEmp}> */}\r\n        <div id=\"addNewDealerDiv\">\r\n            <input\r\n                type=\"text\"\r\n                id=\"firstName\"\r\n                name=\"firstName\"\r\n                value={newDealerObj.firstName}\r\n                onChange={handleAddDealer}\r\n                placeholder=\"Enter First Name\" />\r\n                <br/>\r\n                <br/>\r\n            <input\r\n                type=\"text\"\r\n                id=\"lastName\"\r\n                name=\"lastName\"\r\n                value={newDealerObj.lastName}\r\n                onChange={handleAddDealer}\r\n                placeholder=\"Enter Last Name\" />\r\n                <br/>\r\n                <br/>\r\n            <input\r\n                type=\"text\"\r\n                id=\"mobileNumber\"\r\n                name=\"mobileNumber\"\r\n                value={newDealerObj.mobileNumber}\r\n                onChange={handleAddDealer}\r\n                placeholder=\"Enter Mobile Number\" />\r\n                <br/>\r\n                <br/>\r\n             <input\r\n                type=\"text\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={newDealerObj.email}\r\n                onChange={handleAddDealer}\r\n                placeholder=\"Enter Email\" />   \r\n                <br/>\r\n                <br/>\r\n             <input\r\n                type=\"text\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                value={newDealerObj.password}\r\n                onChange={handleAddDealer}\r\n                placeholder=\"Enter password\" /> \r\n                <br/>\r\n                <br/>  \r\n            <input\r\n                type=\"submit\"\r\n                // type=\"button\"\r\n                value=\"Add Dealer\"\r\n                onClick={submitinsertDealer}\r\n            />\r\n        </div>\r\n        <p>New Dealer Data: {displayDealerObj.DealerId} {displayDealerObj.firstName} {displayDealerObj.lastName}{displayDealerObj.mobileNumber}{displayDealerObj.email}</p>\r\n        </div>\r\n        );\r\n}\r\nexport default InsertDealer;","C:\\Users\\Kumar Shubham\\online-dairy-managment-project-main\\src\\components\\controller\\DealerController\\GetAllDealer.js",["79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99"],{"ruleId":"100","severity":1,"message":"101","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":23},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"100","severity":1,"message":"108","line":4,"column":10,"nodeType":"102","messageId":"103","endLine":4,"endColumn":29},{"ruleId":"100","severity":1,"message":"109","line":4,"column":30,"nodeType":"102","messageId":"103","endLine":4,"endColumn":49},{"ruleId":"100","severity":1,"message":"110","line":4,"column":50,"nodeType":"102","messageId":"103","endLine":4,"endColumn":69},{"ruleId":"100","severity":1,"message":"111","line":7,"column":9,"nodeType":"102","messageId":"103","endLine":7,"endColumn":18},{"ruleId":"100","severity":1,"message":"112","line":7,"column":19,"nodeType":"102","messageId":"103","endLine":7,"endColumn":32},{"ruleId":"100","severity":1,"message":"113","line":22,"column":11,"nodeType":"102","messageId":"103","endLine":22,"endColumn":23},{"ruleId":"104","replacedBy":"114"},{"ruleId":"106","replacedBy":"115"},{"ruleId":"100","severity":1,"message":"108","line":4,"column":10,"nodeType":"102","messageId":"103","endLine":4,"endColumn":29},{"ruleId":"100","severity":1,"message":"109","line":4,"column":30,"nodeType":"102","messageId":"103","endLine":4,"endColumn":49},{"ruleId":"100","severity":1,"message":"110","line":4,"column":50,"nodeType":"102","messageId":"103","endLine":4,"endColumn":69},{"ruleId":"100","severity":1,"message":"116","line":4,"column":70,"nodeType":"102","messageId":"103","endLine":4,"endColumn":86},{"ruleId":"100","severity":1,"message":"117","line":4,"column":87,"nodeType":"102","messageId":"103","endLine":4,"endColumn":107},{"ruleId":"100","severity":1,"message":"111","line":7,"column":9,"nodeType":"102","messageId":"103","endLine":7,"endColumn":18},{"ruleId":"100","severity":1,"message":"112","line":7,"column":19,"nodeType":"102","messageId":"103","endLine":7,"endColumn":32},{"ruleId":"100","severity":1,"message":"118","line":9,"column":7,"nodeType":"102","messageId":"103","endLine":9,"endColumn":16},{"ruleId":"100","severity":1,"message":"119","line":13,"column":12,"nodeType":"102","messageId":"103","endLine":13,"endColumn":25},{"ruleId":"100","severity":1,"message":"120","line":13,"column":27,"nodeType":"102","messageId":"103","endLine":13,"endColumn":43},{"ruleId":"100","severity":1,"message":"121","line":15,"column":12,"nodeType":"102","messageId":"103","endLine":15,"endColumn":27},{"ruleId":"100","severity":1,"message":"122","line":15,"column":29,"nodeType":"102","messageId":"103","endLine":15,"endColumn":47},{"ruleId":"100","severity":1,"message":"123","line":16,"column":12,"nodeType":"102","messageId":"103","endLine":16,"endColumn":20},{"ruleId":"100","severity":1,"message":"124","line":16,"column":22,"nodeType":"102","messageId":"103","endLine":16,"endColumn":33},{"ruleId":"100","severity":1,"message":"125","line":17,"column":12,"nodeType":"102","messageId":"103","endLine":17,"endColumn":24},{"ruleId":"100","severity":1,"message":"126","line":17,"column":26,"nodeType":"102","messageId":"103","endLine":17,"endColumn":41},{"ruleId":"100","severity":1,"message":"127","line":18,"column":11,"nodeType":"102","messageId":"103","endLine":18,"endColumn":19},{"ruleId":"100","severity":1,"message":"128","line":19,"column":11,"nodeType":"102","messageId":"103","endLine":19,"endColumn":30},{"ruleId":"100","severity":1,"message":"129","line":20,"column":11,"nodeType":"102","messageId":"103","endLine":20,"endColumn":21},{"ruleId":"100","severity":1,"message":"113","line":21,"column":11,"nodeType":"102","messageId":"103","endLine":21,"endColumn":23},{"ruleId":"130","severity":2,"message":"131","line":106,"column":16,"nodeType":"102","messageId":"132","endLine":106,"endColumn":28},{"ruleId":"100","severity":1,"message":"108","line":4,"column":10,"nodeType":"102","messageId":"103","endLine":4,"endColumn":29},{"ruleId":"100","severity":1,"message":"109","line":4,"column":30,"nodeType":"102","messageId":"103","endLine":4,"endColumn":49},{"ruleId":"100","severity":1,"message":"110","line":4,"column":50,"nodeType":"102","messageId":"103","endLine":4,"endColumn":69},{"ruleId":"100","severity":1,"message":"116","line":4,"column":70,"nodeType":"102","messageId":"103","endLine":4,"endColumn":86},{"ruleId":"100","severity":1,"message":"133","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":13},{"ruleId":"100","severity":1,"message":"111","line":7,"column":9,"nodeType":"102","messageId":"103","endLine":7,"endColumn":18},{"ruleId":"100","severity":1,"message":"112","line":7,"column":19,"nodeType":"102","messageId":"103","endLine":7,"endColumn":32},{"ruleId":"100","severity":1,"message":"134","line":13,"column":16,"nodeType":"102","messageId":"103","endLine":13,"endColumn":28},{"ruleId":"100","severity":1,"message":"135","line":13,"column":30,"nodeType":"102","messageId":"103","endLine":13,"endColumn":45},{"ruleId":"100","severity":1,"message":"119","line":14,"column":16,"nodeType":"102","messageId":"103","endLine":14,"endColumn":29},{"ruleId":"100","severity":1,"message":"120","line":14,"column":31,"nodeType":"102","messageId":"103","endLine":14,"endColumn":47},{"ruleId":"100","severity":1,"message":"136","line":15,"column":16,"nodeType":"102","messageId":"103","endLine":15,"endColumn":32},{"ruleId":"100","severity":1,"message":"137","line":15,"column":34,"nodeType":"102","messageId":"103","endLine":15,"endColumn":53},{"ruleId":"100","severity":1,"message":"121","line":16,"column":16,"nodeType":"102","messageId":"103","endLine":16,"endColumn":31},{"ruleId":"100","severity":1,"message":"122","line":16,"column":33,"nodeType":"102","messageId":"103","endLine":16,"endColumn":51},{"ruleId":"100","severity":1,"message":"123","line":17,"column":16,"nodeType":"102","messageId":"103","endLine":17,"endColumn":24},{"ruleId":"100","severity":1,"message":"124","line":17,"column":26,"nodeType":"102","messageId":"103","endLine":17,"endColumn":37},{"ruleId":"100","severity":1,"message":"125","line":18,"column":16,"nodeType":"102","messageId":"103","endLine":18,"endColumn":28},{"ruleId":"100","severity":1,"message":"126","line":18,"column":30,"nodeType":"102","messageId":"103","endLine":18,"endColumn":45},{"ruleId":"100","severity":1,"message":"128","line":20,"column":15,"nodeType":"102","messageId":"103","endLine":20,"endColumn":34},{"ruleId":"100","severity":1,"message":"113","line":22,"column":15,"nodeType":"102","messageId":"103","endLine":22,"endColumn":27},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["138"],"no-negated-in-lhs",["139"],"'deleteDealerService' is defined but never used.","'updateDealerService' is defined but never used.","'insertDealerService' is defined but never used.","'getDealer' is defined but never used.","'getAllDealers' is defined but never used.","'dealerDelete' is assigned a value but never used.",["138"],["139"],"'getDealerService' is defined but never used.","'getAllDealersService' is defined but never used.","'AddDealer' is assigned a value but never used.","'updtDealerObj' is assigned a value but never used.","'setUpdtDealerObj' is assigned a value but never used.","'updateDealerObj' is assigned a value but never used.","'setUpdateDealerObj' is assigned a value but never used.","'dealerId' is assigned a value but never used.","'setdealerId' is assigned a value but never used.","'deleteDealer' is assigned a value but never used.","'setDeleteDealer' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'dealerDataFromStore' is assigned a value but never used.","'dealerList' is assigned a value but never used.","no-undef","'InsertDealer' is not defined.","undef","'axios' is defined but never used.","'newDealerObj' is assigned a value but never used.","'setNewDealerObj' is assigned a value but never used.","'displayDealerObj' is assigned a value but never used.","'setDisplayDealerObj' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]